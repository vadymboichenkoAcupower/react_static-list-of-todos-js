{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/TodoInfo/TodoInfo.jsx","components/TodoList/TodoList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","title","completed","TodoList","todos","Array","isArray","map","id","todosFromServer","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"yOAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAEED,EAFFC,MACAC,EACEF,EADFE,KAGF,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,KCPMG,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAGED,EAHFC,MACAP,EAEEM,EAFFN,KACAQ,EACEF,EADFE,UAGF,OACE,0BAASL,UAAS,mBAAcK,EAAY,sBAAwB,IAApE,UACE,oBAAIL,UAAU,kBAAd,SAAiCI,IAEhCP,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCXlBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,yBAASP,UAAU,WAAnB,SACGQ,MAAMC,QAAQF,IAAUA,EAAMG,KAAI,SAAAP,GAAI,OACrC,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKQ,UCK/B,IAAMJ,EAAQK,EAAgBF,KAAI,SAAAP,GAAI,kCACxCA,GADwC,IAE3CN,MAPmBgB,EAODV,EAAKU,OANhBC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKc,KAAOE,MACzC,QAFT,IAAqBA,KAURG,EAAM,kBACjB,sBAAKhB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUO,MAAOA,QChBrBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.60217e80.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n\nUserInfo.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n\nTodoInfo.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    user: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { TodoInfo } from '../TodoInfo';\n\nexport const TodoList = ({ todos }) => (\n  <section className=\"TodoList\">\n    {Array.isArray(todos) && todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n","import './App.scss';\n\nimport todosFromServer from './api/todos.json';\nimport usersFromServer from './api/users.json';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport const todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">Static list of todos</h1>\n    <TodoList todos={todos} />\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}